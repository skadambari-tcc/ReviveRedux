"use strict";
/*!
 * jquery-confirm v1.5.3 (http://craftpip.github.io/jquery-confirm/)
 * Author: Boniface Pereira
 * Website: www.craftpip.com
 * Contact: hey@craftpip.com
 *
 * Copyright 2013-2015 jquery-confirm
 * Licensed under MIT (https://github.com/craftpip/jquery-confirm/blob/master/LICENSE)
 */
if ("undefined" == typeof jQuery) throw new Error("jquery-confirm requires jQuery"); var jconfirm, Jconfirm; !function (t) { t.confirm = function (t) { return t.title = "Confirm!", t.confirmButton = "YES", t.cancelButton = "NO", jconfirm(t) }, t.alert = function (t) { return t.title = "Alert!", t.confirmButton = "Ok", t.cancelButton = !1, jconfirm(t) }, t.dialog = function (t) { return t.cancelButton = !1, t.confirmButton = !1, jconfirm(t) }, jconfirm = function (n) { jconfirm.defaults && t.extend(jconfirm.pluginDefaults, jconfirm.defaults); var n = t.extend({}, jconfirm.pluginDefaults, n); return new Jconfirm(n) }, Jconfirm = function (n) { t.extend(this, n), this._init() }, Jconfirm.prototype = { _init: function () { var t = this; this._rand = Math.round(99999 * Math.random()), this._buildHTML(), this._bindEvents(), setTimeout(function () { t.open() }, 0) }, animations: ["anim-scale", "anim-top", "anim-bottom", "anim-left", "anim-right", "anim-zoom", "anim-opacity", "anim-none", "anim-rotate", "anim-rotatex", "anim-rotatey", "anim-scalex", "anim-scaley"], _buildHTML: function () { var n = this; this.animation = "anim-" + this.animation.toLowerCase(), "none" === this.animation && (this.animationSpeed = 0), this.$el = t(this.template).appendTo(this.container).addClass(this.theme), this.$b = this.$el.find(".jconfirm-box").css({ "-webkit-transition-duration": this.animationSpeed / 1e3 + "s", "transition-duration": this.animationSpeed / 1e3 + "s", "-webkjit-transition-timing-function": "cubic-bezier(0.27, 1.12, 0.52, " + this.animationBounce + ")", "transition-timing-function": "cubic-bezier(0.27, 1.12, 0.52, " + this.animationBounce + ")" }), this.$b.addClass(this.animation); var n = this; setTimeout(function () { n.$el.find(".jconfirm-bg").animate({ opacity: 1 }, n.animationSpeed / 2) }, 1), this.title ? this.$el.find("div.title").html('<i class="' + this.icon + '"></i> ' + this.title) : this.$el.find("div.title").remove(); var i = this.$el.find("div.content"), o = this.$el.find(".buttons"); if (this.confirmButton && "" !== this.confirmButton.trim() && (this.$confirmButton = t('<button class="btn">' + this.confirmButton + "</button>").appendTo(o), this.$confirmButton.addClass(this.confirmButtonClass)), this.cancelButton && "" !== this.cancelButton.trim() && (this.$cancelButton = t('<button class="btn">' + this.cancelButton + "</button>").appendTo(o), this.$cancelButton.addClass(this.cancelButtonClass)), this.confirmButton || this.cancelButton || (o.remove(), this.closeIcon && (this.$closeButton = this.$b.find(".closeIcon").show())), "url:" === this.content.substr(0, 4).toLowerCase()) { i.html(""), o.find("button").attr("disabled", "disabled"); var e = this.content.substring(4, this.content.length); setTimeout(function () { t.get(e, function (t) { i.html(t), o.find("button").removeAttr("disabled"), n.setDialogCenter() }) }, 1) } else i.html(this.content); this.autoClose && this._startCountDown() }, _startCountDown: function () { var n = this.autoClose.split("|"); if (/cancel/.test(n[0]) && "alert" === this.type) return !1; if (/confirm|cancel/.test(n[0])) { this.$cd = t(' <span class="countdown"></span>').appendTo(this["$" + n[0] + "Button"]); var i = this; i.$cd.parent().click(); var o = n[1] / 1e3; this.interval = setInterval(function () { i.$cd.html(" [" + (o -= 1) + "]"), 0 === o && (i.$cd.parent().trigger("click"), clearInterval(i.interval)) }, 1e3) } }, _bindEvents: function () { var n = this; this.$el.find(".jconfirm-bg").click(function () { n.backgroundDismiss ? (n.cancel(), n.close()) : (n.$b.addClass("hilight"), setTimeout(function () { n.$b.removeClass("hilight") }, 400)) }), this.$confirmButton && this.$confirmButton.click(function (t) { t.preventDefault(); var i = n.confirm(n.$b); ("undefined" == typeof i || i) && n.close() }), this.$cancelButton && this.$cancelButton.click(function (t) { t.preventDefault(); var i = n.cancel(n.$b); ("undefined" == typeof i || i) && n.close() }), this.$closeButton && this.$closeButton.click(function (t) { t.preventDefault(), n.cancel(), n.close() }), this.keyboardEnabled && setTimeout(function () { t(window).on("keyup." + this._rand, function (t) { n.reactOnKey(t) }) }, 500), t(window).on("resize." + this._rand, function () { n.setDialogCenter() }), this.setDialogCenter() }, reactOnKey: function n(i) { var o = t(".jconfirm"); if (o.eq(o.length - 1)[0] !== this.$el[0]) return !1; var n = i.which; if (console.log(n), 27 === n) { if (!this.backgroundDismiss) return this.$el.find(".jconfirm-bg").click(), !1; this.$cancelButton ? this.$cancelButton.click() : this.close() } (13 === n || 32 == n) && this.$confirmButton && this.$confirmButton.click() }, setDialogCenter: function () { var n = t(window).height(), i = this.$b.height(), o = (n - i) / 2; this.$b.find(".content").css({ "max-height": n - 200 + "px" }), this.$b.css({ "margin-top": o }) }, close: function () { var n = this; t(window).unbind("resize." + this._rand), this.keyboardEnabled && t(window).unbind("keyup." + this._rand), this.$el.find(".jconfirm-bg").animate({ opacity: 0 }, this.animationSpeed / 2), this.$b.addClass(this.animation), t("body").removeClass("jconfirm-noscroll"), setTimeout(function () { n.$el.remove() }, this.animationSpeed + 30), jconfirm.record.closed += 1, jconfirm.record.currentlyOpen -= 1 }, open: function () { t("body").addClass("jconfirm-noscroll"), this.$b.removeClass(this.animations.join(" ")), t("body :focus").trigger("blur"), jconfirm.record.opened += 1, jconfirm.record.currentlyOpen += 1 } }, jconfirm.pluginDefaults = { template: '<div class="jconfirm"><div class="jconfirm-bg"></div><div class="container"><div class="row"><div class="col-md-6 col-md-offset-3 span6 offset3"><div class="jconfirm-box"><div class="closeIcon"><span class="glyphicon glyphicon-remove"></span></div><div class="title"></div><div class="content"></div><div class="buttons pull-right"></div><div class="jquery-clear"></div></div></div></div></div></div>', title: "Confirm", content: "Are you sure want to continue?", icon: "", confirmButton: "YES", cancelButton: "NO", confirmButtonClass: "GreenBtn btn-primary", cancelButtonClass: "YellowBtn btn-primary", theme: "white", animation: "scale", animationSpeed: 400, animationBounce: 1.5, keyboardEnabled: !1, container: "body", confirm: function () { }, cancel: function () { return !1 }, backgroundDismiss: !1, autoClose: !1, closeIcon: !0 }, jconfirm.record = { opened: 0, closed: 0, currentlyOpen: 0 } }(jQuery);