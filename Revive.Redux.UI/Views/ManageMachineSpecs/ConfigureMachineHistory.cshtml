@model Revive.Redux.Entities.ConfigureMachineHistoryModel

@{
    ViewBag.Title = "Machine History Drop-down Configuration";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using Kendo.Mvc.UI
@using Kendo.Mvc.UI.Fluent
<style type="text/css">
    .modal .fade {
        top: 30%;
        transition: opacity 0.3s linear;
    }

        .modal.fade.in {
            top: 30%;
        }

    .modal-backdrop {
        background-color: #000;
        bottom: 0;
        left: 0;
        position: fixed;
        right: 0;
        top: 0;
        z-index: 0 !important;
    }

    .col-md-5 {
        width: 17.5%;
    }

    .GreenBtn {
        float: right;
    }
</style>

<input type="hidden" id="ConfigureMachineHistoryID" name="DeleteConfigureMachineHistory" />
<div id="myModalDelete" class="modal fade" data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <!-- dialog body -->
            <div class="modal-body">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <div>
                    @Html.Label("Title", htmlAttributes: new { @class = "", @id = "lblTitleDelete" })
                </div>
            </div>
            <!-- dialog buttons -->
            <div class="modal-footer footerbtn">
                <button type="button" id="Deletebtn" class="btn GreenBtn" data-dismiss="modal">YES</button>
                <button type="button" class="btn YellowBtn" data-dismiss="modal">NO</button>
            </div>
        </div>
    </div>
</div>
<div id="DeleteModal" class="modal fade" data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <!-- dialog body -->
            <div class="modal-body">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <div>
                    @Html.Label("Do you want to delete this Configure Machine History?", htmlAttributes: new { @class = "", @id = "Title" })
                </div>
            </div>
            <!-- dialog buttons -->
            <div class="modal-footer footerbtn">
                <button type="button" id="Approvebtn" class="btn GreenBtn btn-primary" data-dismiss="modal">YES</button>
                <button type="button" class="btn btn-primary YellowBtn" data-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>
<input type="hidden" id="serviceslist" name="serviceslist" />
<input type="hidden" id="DeleteRole" name="DeleteRole" />

<div class="modal-body">
    <div class="row">
        <div class="col-md-12">
            <div class=" contant_page">
                <div>
                    <div class="row"><div style="margin-left: 0.5%;"><h2>Machine History Drop-down Configuration</h2></div></div>

                    <div class="row">
                        <div class="col-md-7"></div>
                        <div class="col-md-4" style="float: right;">
                            <div class="col-md-10">
                                <button id="btnAddConfigureMachineHistory" type="button" class="GreenBtn ">Add </button>
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="Kendogrid table-responsive" style="margin-left:-0.8%">
                        @*kendogrid*@

                        @(Html.Kendo().Grid<Revive.Redux.Entities.ConfigureMachineHistoryModel>()
                                .Name("ConfigureMachineHistoryGrid")
                                .DataSource(dataSource => dataSource
                                .Ajax().PageSize(10)
                                .Read("GetConfigureMachineHistoryData", "ManageMachineSpecs")
                                .ServerOperation(false)
                        )
                    .Columns(columns =>
                        {
                            columns.Bound(c => c.ConfigureTypeValue).Width(240).Title("Configure Type");
                            columns.Bound(c => c.ConfiguredValue).Width(250).Title("Configure Value");
                            //columns.Bound(c => c.Status).Width(160).Title("Status").ClientTemplate("# if (Status == true) { # Active #}else{#In Active#} #");
                            columns.Bound(c => c.ConfigureMachineHistoryId).ClientTemplate("<a href=\"/ManageMachineSpecs/EditConfigureMachineHistory/#= ConfigureMachineHistoryId#\" id='e_#= ConfigureMachineHistoryId#' " + "><i class='fa fa-pencil fa-lg icon-color', style='align:center'></i></a>").Title("Edit").Filterable(false).Sortable(false).Width(80).HtmlAttributes(new { @style = "cursor:pointer" });
                            columns.Bound(p => p.ConfigureMachineHistoryId).ClientTemplate("<a onclick='return deleteConfigureMachineHistoryAction(\"#= ConfigureMachineHistoryId#\")' href='javascript:void(0);'><img src='" + Url.Content("~/Scripts/images/delite_icon.png") + "' /></a>").Title("Delete").Filterable(false).Sortable(false).Width(80).HtmlAttributes(new { @style = "cursor:pointer" });
                            //columns.Bound(c => c.ConfigureTypeId).ClientTemplate(
                            //   " # if (page_access_code ==null){" +
                            //    "#<a title='Delete' id=\"Delete\" style=\'Cursor:pointer' onclick=\"DeleteRecord('#= User_Level_ID#,#= User_Level_Name#');\" " + "><img src='" + Url.Content("~/Scripts/images/delite_icon.png") + "' /></a>#" +
                            //    "}" +
                            //    "else if (page_access_code !=null){" +
                            //    "}" +
                            //     "else{}#"
                            //    ).Title("Delete").Filterable(false).Sortable(false).Width(80);
                        })
                                            .HtmlAttributes(new { style = "width: 1063px;" })
                                            .Pageable(pageable =>
                                                {
                                                    pageable.Refresh(true);
                                                    pageable.PageSizes(new int[] { 10, 20, 50 });
                                                    pageable.Messages(messages => messages.Empty("No record found!"));
                                                })
                                                .Filterable(f => f.Operators(o => o.ForString(fs =>
                                                {
                                                    fs.Clear().Contains("Contains");
                                                    fs.DoesNotContain("Does not contain");
                                                    fs.IsEqualTo("Equal to");
                                                    fs.IsNotEqualTo("Not equal to");
                                                    fs.StartsWith("Starts with");
                                                    fs.EndsWith("Ends with");
                                                })))
                                            .Sortable()
                                            .Scrollable()
                                            .Mobile()
                        )
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">

    $(document).ready(function RefreshGrid(e) {
        Revive.Redux.Common.SetParentMenuSelected('TechnicalManagement');
        Revive.Redux.Common.SetKendoGridHeight();

        var grid = $("#ConfigureMachineHistoryGrid").data("kendoGrid");
        grid.dataSource.read();

        @if (TempData["Success"] != null)
        {
            <text>toastr.success("@TempData["Success"]");</text>
        }

        $(".close").click(function () {
            location.reload();
        });
    });

    //Delete ConfigureMachineHistory
    function deleteConfigureMachineHistoryAction(ConfigureMachineHistoryID) {
        $('#myModalDelete').modal('show');
        $("#lblTitleDelete").text("Do you want to delete this configure machine history?");
        $("#ConfigureMachineHistoryID").val(ConfigureMachineHistoryID);
    }

    $('#Deletebtn').click(function (e) {
        var ConfigureMachineHistoryID = $("#ConfigureMachineHistoryID").val();
        $.ajax({
            type: "POST",
            url: '@Url.Action("DeleteConfigureMachineHistory", "ManageMachineSpecs")',
            data: JSON.stringify({ "ConfigureMachineHistoryID": ConfigureMachineHistoryID }),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
        }).done(function (result) {
            $('#ConfigureMachineHistoryGrid').data().kendoGrid.dataSource.read(); // or
            if (result != " ") {
                if (result == "Success") {
                    toastr.success('Configure Machine History deleted Successfully!');
                }
                else if (result == "Fail") {
                    toastr.warning('There is some error deleting Configure Machine History!');
                }
                else {
                    toastr.warning(result);
                }
            }
        })
    });

    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            $.alert({ content: message, confirm: function () { } });
        }
    }

    $('#btnAddConfigureMachineHistory').click(function () {
        window.location.href = '@Url.Action("AddConfigureMachineHistory", "ManageMachineSpecs")';
    });

    $('#txtName').on('keypress', function () {
        //$('#txtName').css('border-color', '');
        $('#RoleValidation').hide();
    });


    function DeleteRecord(Id) {
        var arr = Id;
        $('#DeleteModal').modal('show');
        $("#DeleteRole").val(arr);
    }
    var msgs = $("#HiddenDeletemsgs").val();

    $('#Approvebtn').click(function (e) {
        var id = $("#DeleteRole").val();
        $.ajax({
            type: "POST",
            url: '@Url.Action("DeleteRole", "UserRole")',

            //Your Action name in the DropDownListConstroller.cs
            data: JSON.stringify({ id: id }),
            contentType: "application/json; charset=utf-8",
            dataType: "json",

        }).done(function (data) {
            //Successfully pass to server and get response

            $('#RoleGrid').data().kendoGrid.dataSource.read(data); // or
            if (data.result = "OK") {
                if (data._ErrorMsg != '') {
                    toastr.error(data._ErrorMsg);
                }
                else {
                    toastr.success('@ReviveMessages.Delete');
                }

                result = true;
            }
        })
    });
    @if (TempData["isCreatedSuccess"] != null && (bool)TempData["isCreatedSuccess"] == true)
    {
          <text>toastr.success('@ReviveMessages.Add');</text>
    }

    @if (TempData["isUpdatedSuccess"] != null && (bool)TempData["isUpdatedSuccess"] == true)
    {
        <text>toastr.success('@ReviveMessages.Update');</text>
    }

</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
