@model Revive.Redux.UI.ManageUserViewModel

@{
    ViewBag.Title = "ChangePassword";
}

@using (Html.BeginForm("UpdatePassword", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
   @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="form-horizontal">
        <div class="col-md-12">
            <div class=" contant_page">
                <div class="row">
                    <div class="lable-align-top">
                        <h2 style="margin-left:-0.4%">Change Password</h2>
                    </div>
                    @*<hr />*@
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.OldPassword, htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.OldPassword, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10 ">
                            <input type="submit" value="Update" class="btn btn-default GreenBtn" />
                            <input type="button" value="Skip" class="btn YellowBtn" onclick="location.href='@Url.Action("skippassword", "Account")'" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div>
  @*@Html.ActionLink("Skip", "SkipPassword", "Account")*@
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
