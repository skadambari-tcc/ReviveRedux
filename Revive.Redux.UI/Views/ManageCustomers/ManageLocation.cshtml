@model LocationModel

@using Kendo.Mvc.UI
@using Revive.Redux.Entities

@{
    ViewBag.Title = "Customer Location";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<head>
    <title></title>
    <style type="text/css" media="screen and (min-width: 992px)">
        .dropDownClass {
            width: 18%;
        }
    </style>
</head>



<input type="hidden" id="RecordID" name="DeactivateRecord" />
<div id="myModal" class="modal fade" data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <!-- dialog body -->
            <div class="modal-body">
                <button type="button" class="close" data-dismiss="modal">&times;</button>

                <div>
                    @Html.Label("Title", htmlAttributes: new { @class = "", @id = "lblTitle" })
                </div>
            </div>

            <!-- dialog buttons -->
            <div class="modal-footer footerbtn">
                <button type="button" id="Deactivatebtn" class="btn GreenBtn" data-dismiss="modal">YES</button>
                <button type="button" class="btn YellowBtn" data-dismiss="modal">NO</button>
            </div>
        </div>
    </div>
</div>
<input type="hidden" id="LocationID" name="DeleteLocation" />
<div id="myModalDelete" class="modal fade" data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <!-- dialog body -->
            <div class="modal-body">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <div>
                    @Html.Label("Title", htmlAttributes: new { @class = "", @id = "lblTitleDelete" })
                </div>
            </div>

            <!-- dialog buttons -->
            <div class="modal-footer footerbtn">
                <button type="button" id="Deletebtn" class="btn GreenBtn" data-dismiss="modal">YES</button>
                <button type="button" class="btn YellowBtn" data-dismiss="modal">NO</button>
            </div>
        </div>
    </div>
</div>
@using (Html.BeginForm("CustomerFileUpload", "ManageCustomers", FormMethod.Post))
{
    <div id="FileUpload" class="modal fade" data-keyboard="false" data-backdrop="static">
        <div class="modal-dialog">
            <div class="modal-content" style="min-height: 300px;">
                <!-- dialog body -->
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <div>
                        @Html.Label("Title", htmlAttributes: new { @class = "", @id = "lblFileTitle" })
                    </div>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-12" style="">
                            <div class="form-group">

                                @Html.Label("Customer", htmlAttributes: new { @class = "col-sm-3 control-label text-right required" })

                                <div class="col-sm-6">
                                    <div class="select-icon">
                                        @Html.DropDownListFor(M => M.CustomerId, new SelectList(Model.CustomerNameList, "Id", "Text"), "--Select--", new { @class = "form-control pull-right topspace selecter", @id = "ddlCustomerName" })
                                        @Html.ValidationMessageFor(model => model.CustomerId)
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">

                                @Html.Label("Subsidiary", htmlAttributes: new { @class = "col-sm-3 control-label text-right required" })

                                <div class="col-sm-6">
                                    <div class="select-icon">
                                        @Html.DropDownListFor(m => m.SubsidiaryId, new SelectList(Enumerable.Empty<SelectListItem>(), "Id", "Text"), "--Select--", new { @class = "form-control pull-right topspace selecter" })
                                        @Html.ValidationMessageFor(model => model.SubsidiaryId)
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">

                                @Html.Label("Agent", htmlAttributes: new { @class = "col-sm-3 control-label text-right required" })

                                <div class="col-sm-6">
                                    <div class="select-icon">
                                        @Html.DropDownListFor(m => m.SubAgentId, new SelectList(Enumerable.Empty<SelectListItem>(), "Id", "Text"), "--Select--", new { @class = "form-control pull-right topspace selecter", @onchange = "GetAgentBySubsidiary();" })
                                        @Html.ValidationMessageFor(model => model.SubAgentId)
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("Group", htmlAttributes: new { @class = "col-sm-3 control-label text-right required" })
                                <div class="col-sm-6">
                                    <div class="select-icon">
                                        @Html.DropDownListFor(m => m.GroupId, new SelectList(Model.GroupNameList, "Id", "Text"), "--Select--", new { @class = "form-control pull-right topspace selecter"})
                                        @Html.ValidationMessageFor(model => model.GroupId)
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("File Upload", htmlAttributes: new { @class = "col-sm-3 control-label text-right required", style = "padding-top: 10px;" })
                                <div>
                                    @*<input type="file" name="files" id="fileLocationUpdload" onchange="check_extension(this.value);">*@
                                    @(Html.Kendo().Upload()
                                                                    .Name("files")
                                                                    .Multiple(false)
                                                .Messages(m => m.Select("Select file"))
                                    .HtmlAttributes(new { @accept = ".xlsx,.xls", @class = "" })
                                    .Events(events => events.Select("check_extension"))


                                    )
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- dialog buttons -->
                <div class="modal-footer">
                    <div class="col-md-2"></div>
                    <div class="col-md-8" style="text-align:center">

                        <button type="submit" id="btnFileUpload" class="btn GreenBtn" data-dismiss="">Import</button>
                        <button type="button" class="btn YellowBtn" data-dismiss="modal" onclick="ModelCancelBtn();">Cancel</button>
                    </div>

                </div>

            </div>
        </div>
    </div>
}

@if (!ViewData.ModelState.IsValid)
{

    <div id="FileUploadResult" class="modal fade in" style="display: block;">
        <div class="modal-dialog">
            <div class="modal-content">
                <!-- dialog body -->
                <div class="modal-header">
                    <button type="button" class="close" id="btnResult" data-dismiss="modal">&times;</button>
                    <div>
                        @Html.Label("Result Summary", htmlAttributes: new { @class = "", @id = "lblResultTitle" })
                    </div>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-12 col-xs-12">

                            <div class="k-grid-content">
                                @(Html.Kendo().Grid(Model.LocationResult)
                                .Name("LocationResultGrid")
                                .DataSource(dataSource => dataSource.Ajax().PageSize(10).ServerOperation(false)
                                .Read(read => read.Action("LocationResultAjax", "ManageCustomers")))
                                .Columns(columns =>
                                {
                                    columns.Bound(p => p.LineNumber).Title("Line Name").Filterable(true).Width(120);
                                    columns.Bound(p => p.Message).Title("Result").Filterable(true);
                                })
                                .Pageable(pageable =>
                                {
                                    pageable.Refresh(true);
                                    pageable.PageSizes(new int[] { 10, 20, 50 });
                                    pageable.Messages(messages => messages.Empty("No location available!"));
                                })
                                .Sortable()
                                .Filterable()
                                .HtmlAttributes(new { style = "width:575px" })
                                )
                            </div>
                        </div>

                    </div>


                </div>
                <!-- dialog buttons -->
                @*<div class="modal-footer">
                        <button type="button" id="btnResult" class="btn btn-primary">Ok</button>
                    </div>*@
            </div>
        </div>
    </div>
}

<div class="modal-body" @*style="padding:0px!important"*@>

    <div class="row">
        <div class="col-md-12">
            <div class=" contant_page">
                <div class="row">
                    <!-- tittle -->
                    <div class="lable-align-top">
                        <h2>@Html.DisplayFor(model => model.PageHeader)</h2>
                    </div>
                    <div class="row">
                        <div class="col-md-1 col-sm-1" style="width:2%;"></div>
                        <div class="col-md-3 col-sm-4 dropDownClass" style="">
                            <div class="form-group">
                                <div class="select-icon pull-left">
                                    @Html.DropDownListFor(M => M.CustomerId, new SelectList(Model.CustomerNameList, "Id", "Text"), "All", new { @class = "form-control pull-right topspace selecter", @style = "width: 200px;", @id = "ddlCustomerId_loc" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 col-sm-4 dropDownClass" style="">
                            <div class="form-group">
                                <div class="select-icon pull-left">
                                    @Html.DropDownListFor(M => M.SubsidiaryId, new SelectList(Enumerable.Empty<SelectListItem>(), "Id", "Text"), "--Select--", new { @class = "form-control pull-right topspace selecter", @style = "width: 200px;", @id = "ddlSubsidiaryId_loc" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 col-sm-4" style="">
                            <div class="form-group">
                                <div class="select-icon pull-left">
                                    @Html.DropDownListFor(M => M.SubAgentId, new SelectList(Enumerable.Empty<SelectListItem>(), "Id", "Text"), "--Select--", new { @class = "form-control pull-right topspace selecter", @style = "width: 200px;", @id = "ddlSubAgentId_loc" })
                                </div>
                            </div>
                        </div>
                        @if (ViewBag.CustomerExist == true)
                        {
                            <div class="col-md-3 col-sm-7 pull-right" id="divLocationBtn" style="">
                                <input type="button" title="AddLocation" class="GreenBtn" value="Add Location" onclick="location.href='@Url.Action("Add", "ManageCustomers")'" />
                                <input type="button" title="ImportLocations" class="GreenBtn" value="Import Locations" id="btnImportLocations" />
                            </div>
                        }
                    </div>

                    <br />
                    <div class="row">
                        <div class="grid-align table-responsive Kendogrid" style="margin-right: 0%; margin-left: 0.6%;">
                            @*class="k-grid-content"*@
                            @(Html.Kendo().Grid(Model.CustomerLocationDetails)
                            .Name("LocationGrid")
                            .DataSource(dataSource => dataSource.Ajax().PageSize(10).ServerOperation(false)
                                                    .Read(read => read.Action("LocationAjax", "ManageCustomers").Data("CustomerId"))
                                    //.Events(ev => {ev.Error("onErrorSearchWindow");
                                    //    ev.Change("OnGridChange");})
                                        )
                                .Columns(columns =>
                                {
                                    columns.Bound(p => p.CustomerName).Title("Customer").Filterable(true).Width(100);
                                    columns.Bound(p => p.SubAgentName).Title("Sub Agent").Filterable(true).Width(100);
                                    columns.Bound(p => p.Location_Name).Title("Location").Filterable(true).Width(110);
                                    columns.Bound(p => p.StoreNumber).Title("Store").Filterable(true).Width(70);
                                    columns.Bound(p => p.Address).Title("Address").Filterable(true).Width(120);
                                    columns.Bound(p => p.CityName).Title("City").Filterable(true).Width(60);
                                    columns.Bound(p => p.StateName).Title("State").Filterable(true).Width(60);
                                    columns.Bound(p => p.ZipCode).Title("Zip Code").Filterable(true).Width(80);
                                    columns.Bound(p => p.Phone).Title("Phone").Filterable(true).Width(100);
                                    columns.Bound(p => p.Created_Date).Title("Date Created").Format("{0:MM/dd/yyyy}").Filterable(true).Width(100).ClientTemplate("#= kendo.toString(kendo.parseDate(Created_Date, 'yyyy-MM-dd'), 'MM-dd-yyyy') #");
                                    columns.Bound(p => p.GroupName).Title("Group").Filterable(true).Width(60);
                                    
                                    
                                    columns.Bound(p => p.Location_ID).Title("Edit").ClientTemplate(
                                                   "<a title='Edit' href='" + Url.Action("Edit", "ManageCustomers") + "/#= Location_ID #'" + "><i class='fa fa-pencil fa-lg icon-color', style='align:center'></i></a>").Sortable(false).Filterable(false).Width(40).HtmlAttributes(new { @style = "cursor:pointer" });
                                    columns.Bound(p => p.Location_ID).Title("View").ClientTemplate(
                                                    "<a title='View Details' href='" + Url.Action("View", "ManageCustomers") + "/#= Location_ID #'" + "><i class='fa fa-eye fa-lg icon-color'></i></a>").Sortable(false).Filterable(false).Width(40).HtmlAttributes(new { @style = "cursor:pointer" });
                                    columns.Bound(p => p.Status).Title("Action").ClientTemplate(
                                                    "# if (!Status) { #<a id=\"action\" name='NotActive' runat=\"server\" href='javascript: void(0);' onclick=\"Action('#= Location_ID#,#= Status#,#= Customer_ID#,#= CustomerName#,#= Location_Name#');\" " + "><img src='" + Url.Content("~/Scripts/images/disable_icon.png") + "'/></a># }else{#<a id=\"action\" name='Active' runat=\"server\" href='javascript: void(0);' onclick=\"Action('#= Location_ID#,#= Status#,#= Customer_ID#,#= CustomerName#,#= Location_Name#');\" " + "><img src='" + Url.Content("~/Scripts/images/activate_icon.png") + "' title='Active'/></a>#} #").Sortable(false).Filterable(false).Width(50).HtmlAttributes(new { @style = "cursor:pointer" });
                                    columns.Bound(p => p.Location_ID).ClientTemplate("<a onclick='return deleteLocationAction(\"#=Location_ID#\")' href='javascript:void(0);'><img src='" + Url.Content("~/Scripts/images/delite_icon.png") + "' /></a>").Title("Delete").Filterable(false).Sortable(false).HtmlAttributes(new { @style = "cursor:pointer" });
                                })
                                    .HtmlAttributes(new { style = "width:100%" })
                                    .Pageable(pageable =>
                                    {
                                        pageable.Refresh(true);
                                        pageable.PageSizes(new int[] { 10, 20, 50 });
                                        pageable.Messages(messages => messages.Empty("No location available!"));
                                    })
                                    .Sortable()
                                    .Scrollable()
                                    .Filterable()

                            )
                        </div>
                    </div>

                </div>

            </div>
        </div>
    </div>
    @if (ViewBag.CustomerLocationBtn == true)
    {
        <div class="row">
            <div class="col-md-3"></div>
            <div class="col-md-7">
                <div class="col-md-3 col-sm-3"></div>
                <div class="col-md-6 col-sm-6  butn-space">
                    <input type="button" value="Back" class="btn login_button btn-primary yellow" onclick="location.href='@Url.Action("ManageCustomers", "ManageCustomers")'" />
                </div>
            </div>
        </div>
    }
</div>

<style type="text/css">
    .k-grid-content {
        max-height: 300px;
    }

    .modal .fade {
        top: 30%;
        transition: opacity 0.3s linear;
    }

        .modal.fade.in {
            top: 30%;
        }

    .modal-backdrop {
        background-color: #000;
        bottom: 0;
        left: 0;
        position: fixed;
        right: 0;
        top: 0;
        z-index: 0 !important;
    }

    .col-md-4 {
        width: 44.6%;
    }

    .col-RV {
        /*width: 110%;*/
    }
</style>

<script type="text/javascript">
    $(document).ready(function () {
        //Tooltip added to email column of storeUserGrid
        $("#LocationGrid").kendoTooltip({
            filter: "td:nth-child(6)", //this filter selects the second column's cells
            position: "top",
            content: function (e) {
                var dataItem = $("#LocationGrid").data("kendoGrid").dataItem(e.target.closest("tr"));
                var content = dataItem.CityName;
                return content;
            }
        }).data("kendoTooltip");

        $("#LocationGrid").kendoTooltip({
            filter: "td:nth-child(3)", //this filter selects the second column's cells
            position: "top",
            content: function (e) {
                var dataItem = $("#LocationGrid").data("kendoGrid").dataItem(e.target.closest("tr"));
                var content = dataItem.Location_Name;
                return content;
            }
        }).data("kendoTooltip");

        $("#LocationGrid").kendoTooltip({
            filter: "td:nth-child(11)", //this filter selects the second column's cells
            position: "top",
            content: function (e) {
                var dataItem = $("#LocationGrid").data("kendoGrid").dataItem(e.target.closest("tr"));
                var content = dataItem.GroupName;
                return content;
            }
        }).data("kendoTooltip");
        //end
    });

    //function error_handler(e) {
    //    if (e.errors) {
    //        var message = "Errors:\n";
    //        $.each(e.errors, function (key, value) {
    //            if ('errors' in value) {
    //                $.each(value.errors, function () {
    //                    message += this + "\n";
    //                });
    //            }
    //        });
    //        alert(message);
    //    }
    //}

    //function OnGridChange() {
    //    var nLocationGridCount = 0;
    //    var grid = $("#LocationGrid").data("kendoGrid");
    //    nLocationGridCount = grid.dataSource.total();
    //    alert(nLocationGridCount);
    //    $("#divLocationBtn").hide();
    //    if (nLocationGridCount > 0)
    //    {
    //        $("#divLocationBtn").show();
    //    }

    //}
    //function onErrorSearchWindow() {

    //}


    function ModelCancelBtn() {

        $("#ddlCustomerName").val('');
        $("#SubsidiaryId").empty();
        $("#SubAgentId").empty();
        $("#SubsidiaryId").append('<option value="">' + "--Select--" + '</option>');
        $("#SubAgentId").append('<option value="">' + "--Select--" + '</option>');
    }

    function refreshGrid(e) {
        // $("#LocationGrid").data('kendoGrid').dataSource.read();
    }
    function CustomerId() {
        var selsectedId = $("#ddlCustomerId_loc").val();
        if (selsectedId == 'All' || selsectedId == '') {
            selsectedId = 0;
        }

        var CustLoc = {
            Customer_ID: selsectedId,
            SubsidiaryId: $("#ddlSubsidiaryId_loc").val(),
            SubAgentId: $("#ddlSubAgentId_loc").val()
        };
        return { objCustomerLocation: CustLoc };

    }


    function deleteLocationAction(LocationID) {
        $('#myModalDelete').modal('show');
        $("#lblTitleDelete").text("Do you want to delete this location?");
        $("#LocationID").val(LocationID);
    }
    $('#Deletebtn').click(function (e) {
        var LocationID = $("#LocationID").val();
        $.ajax({
            type: "POST",
            url: '@Url.Action("DeleteLocation", "ManageCustomers")',
            data: JSON.stringify({ "LocationID": LocationID }),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
        }).done(function (result) {
            $('#LocationGrid').data().kendoGrid.dataSource.read(); // or
            if (result != " ") {
                if (result == "Success") {
                    toastr.success('Location deleted Successfully!');
                }
                else if (result == "Fail") {
                    toastr.warning('There is some error deleting location!');
                }
                else {
                    toastr.warning(result);
                }
            }
        })
    });
    function getUrlVars() {
        var vars = 0, hash;
        var id = 0;
        var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('=');
        if (hashes[1] != null) {
            vars = hashes[1];
            flag = true;
        }
        return {
            id: vars
        };
    }
    function Action(Id) {
        var arr = Id.split(',');;
        $('#myModal').modal('show');
        var status = (arr[1] === 'true');
        if (!status) {
            $("#lblTitle").text("Do you want to activate this location?");
        }
        else {
            $("#lblTitle").text("Do you want to deactivate this location?");
        }

        $("#RecordID").val(arr);
    }

    $('#Deactivatebtn').click(function (e) {
        var record = $("#RecordID").val();
        var arr = record.split(',');
        var recordID = arr[0];
        var status = (arr[1] === 'true');
        var nCustomer_ID = arr[2];
        var sLocationName = arr[4];
        var sCustomerName = arr[3];
        var CustomerLocationModel =
             {
                 "Location_ID": recordID,
                 "Status": status,
                 "Location_Name": sLocationName,
                 "CustomerName": sCustomerName,
                 "Customer_ID": nCustomer_ID
             };

        $.ajax({
            type: "POST",
            url: '@Url.Action("ActivateDeactivateLocation", "ManageCustomers")',

            //Your Action name in the DropDownListConstroller.cs
            data: JSON.stringify(CustomerLocationModel),
            contentType: "application/json; charset=utf-8",
            dataType: "json",

        }).done(function (data) {
            $('#LocationGrid').data().kendoGrid.dataSource.read(); // or
            if (data.result = "OK") {

                var successMessage = data.Successmsg;
                var _successmsgs = '';
                if (data.Successmsg != "") {
                    if (sLocationName != '') {
                        _successmsgs = successMessage.replace("[locationName]", sLocationName);
                    }
                    else {
                        _successmsgs = successMessage.replace("[locationName]", "");
                    }
                    toastr.success(_successmsgs);
                    result = true;
                }
                else {
                    toastr.warning(data.ErrorMsgs);
                }
            }

        })
    });
    $(document).ready(function () {
        Revive.Redux.Common.SetParentMenuSelected('Customers');
        Revive.Redux.Common.SetKendoGridHeight();
        $("#LocationGrid").data("kendoGrid").dataSource.read();


        $("#btnResult").click(function (e) {
            window.location.href = '@Url.Action("Locations", "ManageCustomers")';
        });

        $('#btnFileUpload').click(function (e) {
            var Result = true;
            var nCustomerId = $('#ddlCustomerName').val();
            var nSubsidiaryId = $('#SubsidiaryId').val();
            var nSubAgentId = $('#SubAgentId').val();
            var nGroupId = $('#GroupId').val();

            if (nCustomerId == '') {
                Result = false;
                toastr.error('Please select customer name!');
            }
            else if (nSubsidiaryId == '') {
                Result = false;
                toastr.error('Please select Subsidiary!');
            }
            else if (nSubAgentId == '') {
                Result = false;
                toastr.error('Please select Agent!');
            }
            else if (nGroupId == '') {
                Result = false;
                toastr.error('Please select Group!');
            }
            else {
                var File = $("#files").data("kendoUpload");
                //if (File.element.context.value == "")
                var len = File.wrapper.find(".k-file").length;
                if (len === 0) {
                    Result = false;
                    toastr.error('Please select a file to upload!');
                }
            }

            return Result;
        });

        @if (TempData["isCreatedSuccess"] != null && (bool)TempData["isCreatedSuccess"] == true)
        {


            //<text>toastr.success('@ReviveMessages.ManageUserSaveInfo');</text>
            <text>toastr.success('@ReviveMessages.Add');</text>

        }
        @if (TempData["isUpdatedSuccess"] != null && (bool)TempData["isUpdatedSuccess"] == true)
        {


            <text>toastr.success('@ReviveMessages.Update');</text>
        }

        //subsidiary Changes
        $("#ddlCustomerName").change(function () {
            $("#SubsidiaryId").empty();
            $("#SubAgentId").empty();
            $("#SubAgentId").append('<option value="">' + "--Select--" + '</option>');
            if ($("#ddlCustomerName").val() != "") {

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("/GetSubsidiaryByCustomer")', // Calling json method
                    dataType: 'json',
                    data: { CustomerId: $("#ddlCustomerName").val() },
                    success: function (data) {
                        $("#SubsidiaryId").append('<option value="">' + "--Select--" + '</option>');
                        if (data.length > 0) {
                            $.each(data, function (i, dataitem) {
                                $("#SubsidiaryId").append('<option value="' + dataitem.Id + '">' + dataitem.Text + '</option>');
                            });
                        }
                    },
                    error: function (ex) {
                        if ($("#ddlCustomerName").val() != null && $("#ddlCustomerName").val() != '')
                            $.alert({ content: 'Failed to retrieve Subsidairy. ' + ex, confirm: function () { } });
                    }
                });
            }
            else {
                $("#SubsidiaryId").empty();
                $("#SubsidiaryId").append('<option value="">' + "--Select--" + '</option>');
            }
            return false;
        });

        $("#SubsidiaryId").change(function () {
            $("#SubAgentId").empty();
            if ($("#SubsidiaryId").val() != "") {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("/GetAgentBySubsidiary")', // Calling json method
                    dataType: 'json',
                    data: { SubsidiaryId: $("#SubsidiaryId").val() },
                    success: function (AgentList) {
                        $("#SubAgentId").append('<option value="">' + "--Select--" + '</option>');
                        if (AgentList.length > 0) {
                            $.each(AgentList, function (i, AgentList) {
                                $("#SubAgentId").append('<option value="' + AgentList.Id + '">' + AgentList.Text + '</option>');
                            });
                        }

                    },
                    error: function (ex) {
                        if ($("#SubsidiaryId").val() != null && $("#SubsidiaryId").val() != '')
                            $.alert({ content: 'Failed to retrieve Sub Agent. ' + ex, confirm: function () { } });
                    }
                });
            }
            else {
                $("#SubAgentId").empty();
                $("#SubAgentId").append('<option value="">' + "--Select--" + '</option>');
            }
            return false;
        });

    //Dropdown Load event
        $("#ddlCustomerId_loc").change(function () {
            $("#ddlSubsidiaryId_loc").empty();
            $("#ddlSubAgentId_loc").empty();
            $("#ddlSubAgentId_loc").append('<option value="">' + "--Select--" + '</option>');
            if ($("#ddlCustomerId_loc").val() != "") {

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("/GetSubsidiaryByCustomer")', // Calling json method
                    dataType: 'json',
                    data: { CustomerId: $("#ddlCustomerId_loc").val() },
                    success: function (data) {
                        $("#ddlSubsidiaryId_loc").append('<option value="">' + "--Select--" + '</option>');
                        if (data.length > 0) {
                            $.each(data, function (i, dataitem) {
                                $("#ddlSubsidiaryId_loc").append('<option value="' + dataitem.Id + '">' + dataitem.Text + '</option>');
                            });
                        }
                    },
                    error: function (ex) {
                        if ($("#ddlCustomerId_loc").val() != null && $("#ddlCustomerId_loc").val() != '')
                            $.alert({ content: 'Failed to retrieve Subsidairy. ' + ex, confirm: function () { } });
                    }
                });
            }
            else {
                $("#ddlSubsidiaryId_loc").empty();
                $("#ddlSubsidiaryId_loc").append('<option value="">' + "--Select--" + '</option>');
            }
            $("#LocationGrid").data('kendoGrid').dataSource.read();
            return false;
        });

        $("#ddlSubsidiaryId_loc").change(function () {
            $("#ddlSubAgentId_loc").empty();
            if ($("#ddlSubsidiaryId_loc").val() != "") {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("/GetAgentBySubsidiary")', // Calling json method
                    dataType: 'json',
                    data: { SubsidiaryId: $("#ddlSubsidiaryId_loc").val() },
                    success: function (AgentList) {
                        $("#ddlSubAgentId_loc").append('<option value="">' + "--Select--" + '</option>');
                        if (AgentList.length > 0) {
                            $.each(AgentList, function (i, AgentList) {
                                $("#ddlSubAgentId_loc").append('<option value="' + AgentList.Id + '">' + AgentList.Text + '</option>');
                            });
                        }
                    },
                    error: function (ex) {
                        if ($("#ddlSubsidiaryId_loc").val() != null && $("#ddlSubsidiaryId_loc").val() != '')
                            $.alert({ content: 'Failed to retrieve Sub Agent. ' + ex, confirm: function () { } });
                    }
                });
            }
            else {
                $("#ddlSubAgentId_loc").empty();
                $("#ddlSubAgentId_loc").append('<option value="">' + "--Select--" + '</option>');
            }
            $("#LocationGrid").data('kendoGrid').dataSource.read();
            return false;
        });


        $("#ddlSubAgentId_loc").change(function () {
            $("#LocationGrid").data('kendoGrid').dataSource.read();
        });


    });



    //File upload JS

    function check_extension(e) {
        var files = e.files;
        var Result = true;

        $.each(files, function () {

            if (this.extension.toLowerCase() != ".xlsx") {
                if (this.extension.toLowerCase() != ".xls") {
                    toastr.error("Only .xlsx or .xls files can be uploaded!");
                    e.preventDefault();
                    Result = false;
                }
            }

            if (this.size / 1024 / 1024 > 5) {
                toastr.error("Max 5Mb file size is allowed!")
                e.preventDefault();
                Result = false;
            }
        });

        return Result;
    }


    $('#btnImportLocations').click(function (e) {
        $('#FileUpload').modal('show');
        $("#lblFileTitle").text("Upload Location File");
        $('#fileLocationUpdload').val('');
        $('#ddlCustomerName').val('');
    });

</script>
