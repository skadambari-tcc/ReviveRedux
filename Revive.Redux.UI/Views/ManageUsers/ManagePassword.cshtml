@using Kendo.Mvc.UI
@using Revive.Redux.Entities
@model UserModels
@{
    ViewBag.Title = "ManagePassword";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="modal-body">
    <div class="row">
        <div class=" contant_page">
            <div class="col-md-12">
                <!-- tittle -->
                <div class="lable-align-top">
                    <h2>Manage Password</h2>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <div class="col-md-3  col-sm-3 control-label text-right">Customer</div>
                            <div class="col-sm-6">
                                <div class="select-icon">
                                    @Html.DropDownListFor(M => M.Customer_Id, new SelectList(Model.CustomerNameList, "Id", "Text"), "--Select--", new { @class = "form-control pull-right topspace selecter", @id = "ddlCustomerName" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <div class="col-md-3  col-sm-3 control-label text-right">Subsidiary</div>
                            <div class="col-sm-6">
                                <div class="select-icon">
                                    @Html.DropDownListFor(M => M.SubsidiaryId, new SelectList(Model.SubsidiaryList, "Id", "Text"), "--Select--", new { @class = "form-control pull-right topspace selecter", @id = "ddlSubsidiaryName" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <div class="col-md-3  col-sm-3 control-label text-right">SubAgent</div>
                            <div class="col-sm-6">
                                <div class="select-icon">
                                    @Html.DropDownListFor(M => M.SubAgentId, new SelectList(Model.SubAgentList, "Id", "Text"), "--Select--", new { @class = "form-control pull-right topspace selecter", @id = "ddlSubAgentName" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>



                <div class="row" style="padding-top:10px;">
                    <div class="grid-align table-responsive Kendogrid">
                        @(Html.Kendo().Grid<DtoUser>()
                      .Name("ManagePassword")
                      .Columns(columns =>
                      {
                          columns.Bound(p => p.CustomerName).Title("Customer");
                          columns.Bound(p => p.SubAgentName).Title("SubAgent");
                          columns.Bound(p => p.Location_Name).Title("Location");
                          columns.Bound(p => p.FullName).Title("User Name");
                          columns.Bound(p => p.Email_ID).Title("Email");
                          columns.Bound(p => p.Cell_Phone).Title("Phone No");
                          columns.Bound(p => p.User_ID).ClientTemplate("<a title='Edit' onclick=\"changePassword('#= User_ID#','#= Email_ID#','#= FullName#');\" ><i class='fa fa-pencil fa-lg icon-color', style='align:center'></i></a>").Title("Edit Password").Filterable(false).Sortable(false).HtmlAttributes(new { @style = "cursor:pointer" });
                          columns.Bound(p => p.User_ID).Hidden(true);
                      })
                                    .Pageable(pageable =>
                                    {
                                        pageable.Refresh(true);
                                        pageable.PageSizes(new int[] { 10, 20, 50 });
                                        pageable.Messages(messages => messages.Empty("No user found"));
                                    })
                                        .Filterable(f => f.Operators(o => o.ForString(fs =>
                                        {
                                            fs.Clear().Contains("Contains");
                                            fs.DoesNotContain("Does not contain");
                                            fs.IsEqualTo("Equal to");
                                            fs.IsNotEqualTo("Not equal to");
                                            fs.StartsWith("Starts with");
                                            fs.EndsWith("Ends with");
                                        })))
                                    .Sortable()
                                    .Scrollable()
                                            .HtmlAttributes(new { style = "width: 91%;" })
                                    .DataSource(dataSource => dataSource
                                    .Ajax().PageSize(10)
                                    .ServerOperation(false) // paging, sorting, filtering and grouping will be applied client-side
                                        //.Read("ManageUsersAjax", "ManageUsers")
                                                    .Read(read => read.Action("AllStoreUsers", "ManageUsers").Data("ParameterData"))
                                //.PageSize(10)

                                    )
                        )
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>
@using (Html.BeginForm("UpdatePassword", "ManageUsers", FormMethod.Post, new { @id = "frmManagePassword" }))
{
    @Html.HiddenFor(model => model.UserId)
    @Html.HiddenFor(model => model.emailEdit)
    @Html.HiddenFor(model => model.FirstName)
    <div id="FileUpload" class="modal fade" data-keyboard="false" data-backdrop="static">
        <div class="modal-dialog">
            <div class="modal-content" style="min-height: 300px;">
                <!-- dialog body -->
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <div>
                        @Html.Label("Title", htmlAttributes: new { @class = "", @id = "lblFileTitle" })
                    </div>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.Label("New Password", htmlAttributes: new { @class = "col-sm-3 control-label text-right required" })
                                <div class="col-sm-6">
                                    @Html.PasswordFor(model => model.NewPassword, new { @id = "NewPassword", @class = "form-control", @tabindex = 1 })
                                    @Html.ValidationMessageFor(model => model.Pasword, "", new { @class = "red" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-sm-3"></div>
                                <div class="col-sm-6">
                                    <input type="checkbox" id="ShowPassword" name="ShowPassword" style="width:15px;" /> Show Password
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                <div class="col-sm-1"></div>
                                <div class="col-sm-11">
                                    @Html.CheckBoxFor(model => model.IsEmailNotification, new { @style = "width:15px;" }) Email Password & Change Notification To User.
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- dialog buttons -->
                <div class="modal-footer">
                    <div class="row">
                        <div class="col-md-2"></div>
                        <div class="col-md-8" style="text-align:center">
                            <button type="button" id="btnChangePass" class="btn GreenBtn" data-dismiss="">Submit</button>
                            <button type="button" class="btn YellowBtn" data-dismiss="modal">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


<script type="text/javascript">

    //Function To Check Natural Number
    function IsCheckSpecialCharacter(Expression) {
        var pattern = /^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d$@@$!%*#?&]{8,}$/;
        return pattern.test(Expression);
    }

    function ParameterData() {
        var ManageMembers = {
            Customer_Id: $("#ddlCustomerName").val(),
            SubsidiaryId: $("#ddlSubsidiaryName").val(),
            SubAgentId: $("#ddlSubAgentName").val()
        };
        return { objUserModel: ManageMembers };
    }

    function changePassword(User_ID, Email_ID, FirstName) {

        $('#FileUpload').modal('show');
        $("#lblFileTitle").text("Change Password");
        $("#UserId").val(User_ID);
        $("#emailEdit").val(Email_ID);
        $("#FirstName").val(FirstName);

    }

    $(document).ready(function () {

        //change Password form Click
        Revive.Redux.Common.SetKendoGridHeight();
        Revive.Redux.Common.SetParentMenuSelected('Admin');

        $("#btnChangePass").click(function (e) {
            //Work if button type =button to validate complete form
            var errorMessage = "Password should have atleast 8 alphanumeric characters and It should include only these $!%*#?& special characters";
            var validateflag = false;
            var NewPass = $("#NewPassword").val();
            if (NewPass != null && NewPass != "") {
                if (NewPass.length >= 8) {
                    if (IsCheckSpecialCharacter(NewPass)) {
                        validateflag = true;
                        $("#btnChangePass").prop('disabled', true);
                        $('#frmManagePassword').submit();
                    }
                    else {
                        toastr.error(errorMessage);
                        validateflag = false;
                    }
                }
                else {
                    toastr.error(errorMessage);
                    validateflag = false;
                }
            }
            else {
                toastr.error(errorMessage);
                validateflag = false;
            }
            //Validate Upload Control            
        });
        // Validation End

        ParameterData();
        $('#ManagePassword').data().kendoGrid.dataSource.read();
        $("#ShowPassword").change(function () {
            var IsChecked = $("#ShowPassword").prop('checked');
            if (IsChecked == true) {
                $("#NewPassword").get(0).type = 'text';
                $("#NewPassword").css("Display", "Block");
            }
            else {
                $("#NewPassword").get(0).type = 'password';
                $("#NewPassword").css("Display", "Block");
            }
        });

        // Customer dropdown change event
        // Load Subsidiary on select of Customer
        $("#ddlCustomerName").change(function () {
            $("#ddlSubsidiaryName").empty();
            $("#ddlSubAgentName").empty();
            $("#ddlLocationName").empty();
            $("#ddlLocationName").append('<option value="">' + "--Select--" + '</option>');
            $("#ddlSubAgentName").append('<option value="">' + "--Select--" + '</option>');
            var nCustomerId = $("#ddlCustomerName").val();
            if (nCustomerId == '')
            { nCustomerId = 0; }
            $.ajax({
                type: 'POST',
                url: '@Url.Action("/GetSubsidiaryByCustomer")', // Calling json method
                dataType: 'json',
                data: { CustomerId: nCustomerId, bActive: true },
                success: function (subsidiaryLst) {
                    if (subsidiaryLst.length > 0) {
                        $("#ddlSubsidiaryName").append('<option value="">' + "--Select--" + '</option>');
                        $.each(subsidiaryLst, function (i, subsidiaryLst) {
                            $("#ddlSubsidiaryName").append('<option value="' + subsidiaryLst.Id + '">' + subsidiaryLst.Text + '</option>');
                        });
                    }
                    else {
                        $("#ddlSubsidiaryName").empty();
                        $("#ddlSubAgentName").empty();
                        $("#ddlSubsidiaryName").append('<option value="">' + "--Select--" + '</option>');
                        $("#ddlSubAgentName").append('<option value="">' + "--Select--" + '</option>');
                    }
                    $('#ManagePassword').data().kendoGrid.dataSource.read();
                },
                error: function (ex) { $.alert({ content: 'Failed to retrieve Subsidiary list. ' + ex, confirm: function () { } }); }
            });

            return false;
        });

        // Subsidiary dropdown change event
        // Load Subagent on select of Subsidiary
        $("#ddlSubsidiaryName").change(function () {
            $("#ddlSubAgentName").empty();
            $("#ddlLocationName").empty();
            $("#ddlLocationName").append('<option value="">' + "--Select--" + '</option>');
            var nCustomerId = $("#ddlSubsidiaryName").val();
            if (nCustomerId == '')
            { nCustomerId = 0; }
            $.ajax({
                type: 'POST',
                url: '@Url.Action("/GetAgentBySubsidiary")', // Calling json method
                dataType: 'json',
                data: { SubsidiaryId: nCustomerId, bActive: true },
                success: function (subsidiaryLst) {
                    if (subsidiaryLst.length > 0) {
                        $("#ddlSubAgentName").append('<option value="">' + "--Select--" + '</option>');
                        $.each(subsidiaryLst, function (i, subsidiaryLst) {
                            $("#ddlSubAgentName").append('<option value="' + subsidiaryLst.Id + '">' + subsidiaryLst.Text + '</option>');
                        });
                    }
                    else {
                        $("#ddlSubAgentName").empty();
                        $("#ddlSubAgentName").append('<option value="">' + "--Select--" + '</option>');
                    }
                    $('#ManagePassword').data().kendoGrid.dataSource.read();
                },
                error: function (ex) { $.alert({ content: 'Failed to retrieve SubAgent list. ' + ex, confirm: function () { } }); }
            });

            return false;
        });


        // SubAgent dropdown change event
        // Load Location on select of SubAgent
        $("#ddlSubAgentName").change(function () {
            $('#ManagePassword').data().kendoGrid.dataSource.read();
        });
    });

    @if (TempData["isUpdated"] != null && (bool)TempData["isUpdated"] == true)
    {
        <text>toastr.success('Password Updated successfully.');</text>
    }
    @if (TempData["isUpdated"] != null && (bool)TempData["isUpdated"] == false)
    {
        <text>toastr.error('Password not Updated.');</text>
    }
    

    //Tooltip added to email column of storeUserGrid
    $("#ManagePassword").kendoTooltip({
        filter: "td:nth-child(5)", //this filter selects the second column's cells
        position: "top",
        content: function (e) {
            var dataItem = $("#ManagePassword").data("kendoGrid").dataItem(e.target.closest("tr"));
            var content = dataItem.UserName;
            return content;
        }
    }).data("kendoTooltip");
    //end
</script>
